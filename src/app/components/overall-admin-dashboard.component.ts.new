import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { NotificationService } from '../services/notification.service';
import { AuthService } from '../services/auth.service';
import { Subscription } from 'rxjs';
import { FirebaseService } from '../services/firebase.service';
import { ActivityService } from '../services/activity.service';
import { ThemeService } from '../services/theme.service';
import { UserService } from '../services/user.service';

@Component({
  selector: 'app-overall-admin-dashboard',
  standalone: true,
  imports: [CommonModule, FormsModule],
  template: `
    <div class="min-h-screen bg-gradient-to-br from-slate-100 to-blue-50 dark:from-slate-800 dark:to-blue-900 dark:text-white flex flex-col"
         [ngClass]="{'dark': isDarkMode}">
      <!-- Rest of your template code here... -->

        <!-- Activity Feed -->
        <div class="w-full max-w-5xl mt-6">
          <div class="bg-white/80 backdrop-blur rounded-xl border border-slate-100 shadow p-4 sm:p-6">
            <div class="flex items-center mb-4">
              <span class="bg-blue-100 text-blue-600 rounded-full p-2 mr-2 flex items-center justify-center">
                <!-- Activity Icon: Pulse/Heartbeat -->
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="#2563eb" stroke-width="2.2">
                  <polyline points="3 12 7 12 10 19 14 5 17 12 21 12" fill="none" stroke="#2563eb" stroke-width="2.2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </span>
              <h3 class="text-lg font-extrabold tracking-tight text-blue-700 ml-1">Real-time Activity Log</h3>
            </div>
            
            <div class="max-h-80 overflow-y-auto pr-1 custom-scrollbar">
              <ul class="divide-y divide-slate-100 text-sm">
                <li *ngFor="let activity of activityFeed" class="py-2 flex items-center group transition-colors hover:bg-blue-50 rounded-lg px-2">
                  <span [class]="'mr-2 h-2 w-2 rounded-full flex-shrink-0 ' + (activity.severity === 'warning' ? 'bg-yellow-500' : activity.severity === 'error' ? 'bg-red-500' : 'bg-green-500')"></span>
                  <span class="font-medium text-slate-700 group-hover:text-blue-700">{{ activity.message }}</span>
                  <span *ngIf="activity.timestamp" class="ml-auto text-xs bg-blue-100 text-blue-600 rounded-full px-2 py-0.5 group-hover:bg-blue-200 group-hover:text-blue-800 transition-all">{{ activity.timestamp?.toDate() | date:'short' }}</span>
                </li>
                <li *ngIf="activityFeed.length === 0" class="py-4 text-center text-slate-500">
                  No activity logs to display
                </li>
              </ul>
            </div>
            
            <div class="flex justify-end mt-3">
              <button (click)="viewAllActivities = !viewAllActivities" class="px-3 py-1 bg-blue-100 text-blue-700 rounded text-xs font-semibold hover:bg-blue-200 transition">
                {{ viewAllActivities ? 'View Less' : 'View All' }}
              </button>
            </div>
          </div>
        </div>

      <!-- Rest of your template code here... -->
    </div>
  `,
  styles: [`
    .custom-scrollbar::-webkit-scrollbar {
      width: 5px;
    }
    .custom-scrollbar::-webkit-scrollbar-track {
      background: #f1f5f9;
      border-radius: 10px;
    }
    .custom-scrollbar::-webkit-scrollbar-thumb {
      background-color: #cbd5e1;
      border-radius: 10px;
    }
    .custom-scrollbar::-webkit-scrollbar-thumb:hover {
      background-color: #94a3b8;
    }
  `]
})
export class OverallAdminDashboardComponent implements OnInit, OnDestroy {
  // Your component properties...

  constructor(
    private notificationService: NotificationService,
    private authService: AuthService,
    private firebaseService: FirebaseService,
    private activityService: ActivityService,
    private themeService: ThemeService,
    private userService: UserService,
    private cdr: ChangeDetectorRef
  ) {}

  ngOnInit() {
    // Your initialization code...
  }

  // Your other methods...

  ngOnDestroy() {
    // Your cleanup code...
  }
}
